openapi: 3.0.0
info:
  description: "Для задачи по event-notification. Cервис заказа. Сервис биллинга. Сервис нотификаций. При создании пользователя, необходимо создавать аккаунт в сервисе биллинга. В сервисе биллинга должна быть возможность положить деньги на аккаунт и снять деньги. Сервис нотификаций позволяет отправить сообщение на email. И позволяет получить список сообщений по методу API."
  version: "1.0.2"
  title: Homework 6
tags:
  - name: orders
    description: Сервис работы с заказами
  - name: billing
    description: Сервис биллинга
paths:
  /orders/{orderId}:
    get:
      tags:
        - orders
      summary: Получение информации о заказе
      operationId: getOrderInfo
      description: |
        Получение информации о заказе
      parameters:
        - name: orderId
          in: path
          description: ID заказа
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/user/{userId}:
    get:
      tags:
        - billing
      summary: Получение информации о пользователе
      operationId: getUserInfo
      description: |
        Получение информации о пользователе
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Order:
      type: object
      required:
        - id
        - userId
        - price
        - status
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        price:
          type: integer
          format: int64
        status:
          type: integer
          format: int64
    User:
      type: object
      required:
        - id
        - username
        - firstName
        - lastName
        - email
        - phone
        - balance
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          maxLength: 256
        firstName:
          type: string
          maxLength: 256
        lastName:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          maxLength: 256
        phone:
          type: string
          format: phone
          maxLength: 256
        balance:
          type: integer
          format: int64
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string